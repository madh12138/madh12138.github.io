<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello world一起步，从此走上不归路</title>
      <link href="/2022/04/25/hello-world/"/>
      <url>/2022/04/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Date By: 2022-4-26 9:39:06</p><h3 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h3><blockquote><p>基于hexo+github搭建个人博客</p></blockquote><h3 id="首先你得准备node-js-、-git-、-github个人账号"><a href="#首先你得准备node-js-、-git-、-github个人账号" class="headerlink" title="首先你得准备node.js 、 git 、 github个人账号"></a>首先你得准备<code>node.js</code> 、 <code>git</code> 、 <code>github</code>个人账号</h3><p>写博客内容不寒颤的话，再装一个<code>vscode</code>，手敲<code>vim</code>命令修改文件qio实很头疼。</p><p>以管理员身份运行<code>cmd</code>检查<code>node.js</code>是否配置完成，代码如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">node</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查<code>git</code>是否配置完成，代码如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> --version <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要是用到<code>hexo</code>工具，在<code>cmd</code>管理员命令窗口安装<code>hexo</code>工具，代码如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查hexo工具是否安装成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查node.js下的一款安装工具npm是否配置完成，代码如下(安装完node基本就能查出版本号)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时工具的准备工作完成啦！！！</p><h3 id="第一步：搭建仓库"><a href="#第一步：搭建仓库" class="headerlink" title="第一步：搭建仓库"></a>第一步：搭建仓库</h3><p><code>github</code>网页注册账号，自行创建一个<code>respository</code>，注意：仓库名为<code>github账户名+.github.io</code><br>在b站搜索<code>github</code>创建仓库教学，一抓一大把，这里不做缀叙，以我的为例，仓库名是：madh12138.github.io<br><code>github</code>仓库作用就是充当远程服务器，存储我们的博客文件，让所有人可以去访问。</p><h3 id="第二步：生成SSH-Keys"><a href="#第二步：生成SSH-Keys" class="headerlink" title="第二步：生成SSH Keys"></a>第二步：生成<code>SSH Keys</code></h3><p>随便进入一个文件夹当中，随便进，不要管，因为生成SSH秘钥跟你在哪个文件下操作没有关系。一定要在文件夹里面右击选择git bash打开git命令窗口，直接敲如下代码</p><p>注意：双引号下面的是你的<code>github</code>注册的邮件地址，自行修改，github的账户名跟邮箱号很重要！</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen -t rsa -C <span class="token string">"3052634541@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>敲完按四次回车，这时命令就会在电脑本地新建一个文件夹，文件夹默认在C盘下面的users&#x2F;administrator&#x2F;.ssh文件<br>打开<code>ssh</code>文件，会生成两个文件，分别是 <code>id_rsa</code> 和 <code>id_rsa.pud</code>  两个文件<br>点开 <code>id_rsa.pud</code> 文件，复制出秘钥，点开<code>github</code>网页的个人头像的<code>settings</code>，点到<code>SSH and GPG keys</code>，新建一个秘钥，秘钥的title随便取名，秘钥粘贴上去，点击 <code>Add SSH Key</code> 就创建成功了！</p><p>然后要确定我们是否绑定成功，回到刚才那个git命令窗口，输入以下命令，不需修改，照着输入即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span>  -T git@github.com  //测试ssh是否绑定成功<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入命令敲回车，窗口会询问<code>yes / no[fingerprint]?</code>，不用担心，手敲yes，回车即可。<br>出现successfuly authenticated 就表示绑定<code>SSH</code>成功！</p><h3 id="第三步，生成hexo文件"><a href="#第三步，生成hexo文件" class="headerlink" title="第三步，生成hexo文件"></a>第三步，生成hexo文件</h3><p>新建一个文件夹，文件夹名字随意取，在哪个盘新建都行，你记得地址就行，以后这就作为你博客项目的本地文件夹了，新建完成是一个空的文件夹，点进去，右击选择<code>git bash</code>，敲以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init //初始化hexo，成功后会发现文件夹多了好多文件，就是hexo文件,可能会出现链接超时的情况<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>过程中可能会出现连接失败的情况，不要紧，因为<code>github</code>是国外的网站，链接不稳定，再次敲相同代码重试即可。一般第二次第三次就可以初始化啦！</p><p>初始化成功会提示：start blogging with Hexo！且发现文件夹多出好多文件，继续敲命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo s     <span class="token comment">#静态生成本地的hexo页面</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>hexo s</code>命令敲完回车就会有一个本地的访问地址，比如我的出现的是<a href="http://localhost:4000/%EF%BC%8C%E5%A4%8D%E5%88%B6%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%95%A6">http://localhost:4000/，复制地址，就可以访问啦</a><br>(复制的时候不要<code>Ctrl+C</code>,这是停掉本地生成页面服务的快捷键,你需要选中右击点击Copy,当然如果你手速较快，已经停止服务了，页面显示404错误，问题不大，重新输入<code>hexo s</code>即可)</p><p>此时本地的博客搭建完成！本地搭建完成剩下就是发布到<code>github</code>服务器。</p><blockquote><p>如果hexo s命令没有运行成功的话，那就是没装服务的原因，在git面板输入以下命令:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo server   <span class="token comment">#装server服务，再运行hexo server或者hexo s就可以了。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>顺带把hexo deploy的依赖包也装上吧，代码如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="第四步，将本地博客项目上传到github仓库。"><a href="#第四步，将本地博客项目上传到github仓库。" class="headerlink" title="第四步，将本地博客项目上传到github仓库。"></a>第四步，将本地博客项目上传到github仓库。</h3><p>在生成的<code>hexo</code>众多文件里面，找到 <code>_config.yml</code>文件，直接在文件夹中打开编辑也行，在<code>git bash</code>命令窗口敲<code>vim</code>命令也行,当然这需要你有Linux命令基础，我建议直接在文件夹点开编辑就好，打开方式选记事本，vscode打开都可。<br>修改 <code>_config.yml</code>文件夹的deploy，修改为以下内容:(直接拉到最下面)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository： clone仓库地址     <span class="token comment">#仓库http地址，clone出来，加上.git</span>  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意：冒号<code>：</code>后面必须输入一个空格。<br>      冒号<code>：</code>后面必须输入一个空格。<br>      冒号<code>：</code>后面必须输入一个空格。<br><code>clone</code>仓库地址： 就是你在<code>github上面新建仓库的网址+.git</code>。仓库url复制克隆出来大家都会吧，不会的自行百度，很简单的。<br><code>type</code> 和 <code>branch</code> 两个参数的值都是一样的，大家自行照抄就好啦。</p><p>修改完成就进行一下操作</p><p>在<code>hexo</code>项目的文件夹，右击选择 <code>git bash</code>, 输入以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo g   <span class="token comment">#生成页面的命令</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成页面命令敲完回车等待完成，继续输入以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo d  <span class="token comment">#上传到github 的命令 这是最关键的一步</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入完hexo d敲回车，会验证你的github账号，出来一个小输入框，要求输入你的username，输入github用户名即可。<br>用户名输完会马上要求输入密码</p><p>注意！！！！！！！！！！！！！！！！！！！！！！！！！！！</p><p>此时要求输入的密码并非github登录密码!!!<br>此时要求输入的密码并非github登录密码!!!<br>此时要求输入的密码并非github登录密码!!!</p><p>密码先不要急着输入，小输入框拉到一边，</p><p>我们回到<code>github</code>网页</p><p>点击到<code>github</code>网页，点击头像的<code>Settings</code>，点击<code>Developr Settings</code>，点击<code>Personal access tokens</code></p><p>添加一个令牌，令牌名字随便取，令牌的权限建议全部勾选，影响不大，然后点击下面的generate token</p><p>就会出现令牌，很长，复制粘贴是不行的，必须纯手打进那个小输入框，自行手动输入。</p><p>注意：令牌很重要！！！<br>     令牌很重要！！！<br>     令牌很重要！！！<br>一定要把令牌复制出来放到一个记事本或者文档里面，离开页面以后就再也查看不到令牌了，这也是github出于安全性能方面，2021年的大更新，所以令牌要复制出来保存好。下次再发布到github上时还是需要纯手打输入令牌。（肠子都悔青了，令牌自己都忘记复制出来了）。</p><p>令牌手打输入到小输入框内，点击OK，此时就会将本地的<code>hexo</code>项目全部上传至<code>github</code>仓库，回到<code>github</code>仓库即可查看。</p><h3 id="如果输入-hexo-d-出现以下错误："><a href="#如果输入-hexo-d-出现以下错误：" class="headerlink" title="如果输入 hexo d 出现以下错误："></a>如果输入 <code>hexo d</code> 出现以下错误：</h3><p>fatal: unable to auto-detect email address (got ‘z@DESKTOP-DPE3A08.(none)’)<br>error: src refspec HEAD does not match any<br>error: failed to push some refs to ‘<a href="https://github.com/seekwhale13/seekwhale13.ithub.io.git&#39;">https://github.com/seekwhale13/seekwhale13.ithub.io.git&#39;</a></p><h3 id="可以先运行以下代码："><a href="#可以先运行以下代码：" class="headerlink" title="可以先运行以下代码："></a>可以先运行以下代码：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.email <span class="token string">"你的邮箱"</span><span class="token function">git</span> config --global user.name <span class="token string">"你的gihub名字"</span>  <span class="token comment">#注意有两个`-`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>例如我上传失败，输入以下命令回车，然后重新上传(hexo deploy)即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.email <span class="token string">"3052634541@qq.com"</span><span class="token function">git</span> config --global user.name <span class="token string">"madh12138"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.bilibili.com/video/BV1cp4y1i7C7?p=2&share_source=copy_web">哔哩哔哩</a> 我就是按着这位B站大佬一步步搭建起来的</p><p><a href="https://www.baidu.com/">百度</a>  不懂就问度娘，自行搜索</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>芜湖！！ 结束了，昨天下午弄了两个小时把个人博客搭建完成，一步一步来，基本没有什么错误，<code>hexo+github</code>搭建个人博客还是比较简单的，如果你搭建的过程中遇到什么问题可以提出来，大家一起交流交流，仓库名就是我的QQ号，欢迎添加。<br>虽然这个教学有点抽象，没有图片支撑相应的步骤具体操作，但是大家将就着看吧，昨天搭建的时候属实是忘记截图了。如果有兴趣的话欢迎来交流学习。</p><blockquote><h4 id="本文首次发布于2022年4月26号，转载请说明出处并附上本站网址！感谢。"><a href="#本文首次发布于2022年4月26号，转载请说明出处并附上本站网址！感谢。" class="headerlink" title="本文首次发布于2022年4月26号，转载请说明出处并附上本站网址！感谢。"></a>本文首次发布于2022年4月26号，转载请说明出处并附上本站网址！感谢。</h4></blockquote><h3 id="最后，感谢阅读。"><a href="#最后，感谢阅读。" class="headerlink" title="最后，感谢阅读。"></a>最后，感谢阅读。</h3>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
